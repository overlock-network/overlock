run:
  timeout: 5m
  issues-exit-code: 1
  tests: true

output:
  formats:
    - format: colored-line-number
  print-issued-lines: true
  print-linter-name: true
  sort-results: true

linters-settings:
  # Error checking linters
  errcheck:
    check-type-assertions: true
    check-blank: true
    disable-default-exclusions: false
    exclude-functions:
      - fmt.Print
      - fmt.Println
      - fmt.Printf
      - fmt.Fprint
      - fmt.Fprintln
      - fmt.Fprintf
      - (*log.Logger).Print
      - (*log.Logger).Println
      - (*log.Logger).Printf

  errorlint:
    errorf: true
    asserts: true
    comparison: true


  wrapcheck:
    ignoreSigs:
      - .Errorf(
      - errors.New(
      - errors.Unwrap(
      - .Wrap(
      - .Wrapf(
    ignoreSigRegexps:
      - \.New.*Error\(
    ignorePackageGlobs:
      - github.com/web-seven/overlock/pkg/errors

  # Code quality
  gocyclo:
    min-complexity: 15

  dupl:
    threshold: 100

  goconst:
    min-len: 2
    min-occurrences: 3

  goimports:
    local-prefixes: github.com/web-seven/overlock

  gosec:
    includes:
      - G104 # Audit errors not checked
      - G401 # Detect the usage of DES, RC4, MD5 or SHA1
      - G402 # Look for bad TLS connection settings
      - G403 # Ensure minimum RSA key length of 2048 bits
      - G404 # Insecure random number source (rand)

  revive:
    rules:
      - name: error-return
      - name: error-strings
      - name: error-naming
      - name: errorf
      - name: indent-error-flow

linters:
  disable-all: true
  enable:
    # Error handling linters (highest priority)
    - errcheck          # Check for unhandled errors
    - errorlint         # Find common mistakes with Go 1.13+ error wrapping
    - wrapcheck         # Check that errors returned from external packages are wrapped

    # Security and bug prevention
    - gosec             # Security-focused linter
    - govet             # Standard Go vet checks
    - ineffassign       # Detect ineffectual assignments
    - unconvert         # Remove unnecessary type conversions

    # Code quality
    - revive            # Replacement for golint (error rules only)
    - gocyclo           # Check function complexity
    - dupl              # Check for duplicate code
    - goconst           # Find repeated strings that could be constants
    - misspell          # Find misspelled words
    - unparam           # Find unused function parameters

    # Formatting and style
    - goimports         # Check import formatting
    - gofmt             # Check code formatting
    - whitespace        # Check for unnecessary whitespace

    # Performance
    - prealloc          # Find slice declarations that could potentially be preallocated

issues:
  exclude-use-default: false
  exclude-dirs:
    - .git
    - vendor
  exclude-files:
    - ".*\\.pb\\.go$"
    - ".*_gen\\.go$"

  exclude-rules:
    # Exclude some linters from running on tests files
    - path: _test\.go
      linters:
        - gocyclo
        - gosec
        - dupl
        - goconst
        - unparam

    # Allow logger.Fatal in main functions only
    - path: cmd/.*/main\.go
      linters:
        - revive
      text: "logger.Fatal"


    # Skip error wrapping checks on plugins due to external dependencies
    - path: plugins/
      linters:
        - wrapcheck

    # Ignore complexity in vendor code
    - path: vendor/
      linters:
        - gocyclo
        - dupl
        - gosec

  # Be more lenient while dependency issues are resolved
  max-issues-per-linter: 100
  max-same-issues: 50

severity:
  default-severity: error
  case-sensitive: false
  rules:
    - linters:
        - errcheck
        - errorlint
        - wrapcheck
      severity: error