name: Release builds

on:
  push:
    tags:
    - '*'

permissions:
    contents: write
    packages: write
    
jobs:
  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, linux/arm64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
        goos: [linux, windows, darwin]
        goarch: ["386", amd64, arm64]
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: arm64
            goos: windows
          - goarch: "386"
            goos: windows
    steps:
    - uses: actions/checkout@v4
    - name: Set APP_VERSION env
      run: echo APP_VERSION=$(echo ${GITHUB_REF} | rev | cut -d'/' -f 1 | rev ) >> ${GITHUB_ENV}
    - uses: ncipollo/release-action@v1
      with:
        tag: ${{ vars.GITHUB_REF_NAME }}
        skipIfReleaseExists: true
    - uses: wangyoucao577/go-release-action@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        project_path: "./cmd/overlock"
        binary_name: "overlock"
        ldflags: -X "github.com/web-seven/overlock/cmd/overlock/version.Version=${{ env.APP_VERSION }}"
  releases-images:
    name: Release OCI Images
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
    - uses: actions/checkout@v4
    - name: Set APP_VERSION env
      run: echo APP_VERSION=$(echo ${GITHUB_REF} | rev | cut -d'/' -f 1 | rev ) >> ${GITHUB_ENV}
    - uses: ko-build/setup-ko@v0.8
      env:
        KO_DOCKER_REPO: ghcr.io/${{ github.repository }}
    - env:
        auth_token: ${{ secrets.GITHUB_TOKEN }}
        VERSION: ${{ env.APP_VERSION }}
      run: |
        echo "${auth_token}" | ko login ghcr.io --username username --password-stdin
        ko build ./cmd/overlock -t ${{ env.APP_VERSION }} --bare --image-label "org.opencontainers.image.source=https://github.com/${{ github.repository }}"
