name: Release builds

on:
  push:
    tags:
    - '*'

permissions:
    contents: write
    packages: write
    
jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate Changelog
        id: changelog
        run: |
          echo "Current tag: ${{ github.ref_name }}"
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 "${{ github.ref_name }}^" 2>/dev/null || git rev-list --max-parents=0 HEAD)
          echo "Previous tag/commit: $PREVIOUS_TAG"
          CHANGELOG_CONTENT=$(git log --pretty=format:'* %s (%h)' $PREVIOUS_TAG..${{ github.ref_name }})

          {
            echo 'changelog<<EOF'
            echo "$CHANGELOG_CONTENT"
            echo 'EOF'
          } >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## Changelog
            ${{ steps.changelog.outputs.changelog }}
          allowUpdates: true

  releases-matrix:
    name: Release Go Binary
    needs: create-release
    needs: create-release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, linux/arm64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
        goos: [linux, windows, darwin]
        goarch: ["386", amd64, arm64]
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: arm64
            goos: windows
          - goarch: "386"
            goos: windows
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Build and Upload Release Asset
        uses: wangyoucao577/go-release-action@v1
          go-version: stable

      - name: Build and Upload Release Asset
        uses: wangyoucao577/go-release-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          project_path: "./cmd/overlock"
          binary_name: "overlock"
          ldflags: -X "github.com/web-seven/overlock/cmd/overlock/version.Version=${{ github.ref_name }}"

  notify:
    name: Notify Discord
    needs: releases-matrix
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Send Discord Notification
  notify:
    name: Notify Discord
    needs: releases-matrix
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Send Discord Notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_RELEASE_WEBHOOK }}
        run: |
          RELEASE_URL="https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}"
          curl -H "Content-Type: application/json" \
            -X POST \
            -d @- $DISCORD_WEBHOOK <<EOF
          {
            "content": "ðŸš€ New release [${{ github.ref_name }}]($RELEASE_URL)"
          }
          EOF
